---
apiVersion: v1
kind: Namespace
metadata: 
 name: vote

---

apiVersion: apps/v1
kind: Deployment
metadata:
 name: vote-deployment
 namespace: vote
 labels:
  app: vote-deployment
spec:
 replicas: 1
 selector:
    matchLabels:
      app: vote-deployment
 template:
    metadata:
      labels:
        app: vote-deployment
    spec:
      containers:
      - name: vote
        image: kodekloud/examplevotingapp_vote:before

---

apiVersion: v1
kind: Service
metadata:
 name: vote-service
 namespace: vote
spec:
 type: NodePort
 ports:
 - port: 5000
   targetPort: 80
   nodePort: 31000
 selector:
  app: vote-deployment

---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: vote
  name: redis-deployment
spec:
  selector:
    matchLabels:
      app: redis-deployment
  template:
    metadata:
      labels:
        app: redis-deployment
    spec:
      containers:
      - name: redis
        image: redis:alpine
        volumeMounts:
          - name: redis-data
            mountPath: /data
      volumes:
        - name: redis-data
          emptyDir: 

---

apiVersion: v1
kind: Service
metadata:
 name: redis-service
 namespace: vote
spec:
 type: ClusterIP
 ports:
 - port: 6379
   targetPort: 6379
 selector:
  app: redis-deployment

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: vote
  name: worker
spec:
  selector:
    matchLabels:
      app: worker
  template:
    metadata:
      labels:
        app: worker
    spec:
      containers:
      - name: worker
        image: kodekloud/examplevotingapp_worker



---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: vote
  name: db-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db-deployment
  template:
    metadata:
      labels:
        app: db-deployment
    spec:
      containers:
      - name: postgres
        image: postgres:9.4
        env:
          - name: POSTGRES_HOST_AUTH_METHOD
            value: trust
        volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: db-data
      volumes:
        - name: db-data
          emptyDir:

---

apiVersion: v1
kind: Service
metadata:
  namespace: vote
  name: db
spec:
  type: ClusterIP
  selector:
    app: db-deployment
  ports:
  - port: 5432
    targetPort: 5432

---

apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: vote
  name: result-deployment
  labels:
    app: result-deployment
spec:
  selector:
    matchLabels:
      app: result-deployment
  template:
    metadata:
      labels:
        app: result-deployment
    spec:
      containers:
      - name: result
        image: kodekloud/examplevotingapp_result:before

---

apiVersion: v1
kind: Service
metadata:
  namespace: vote
  name: result-service
spec:
  type: NodePort
  selector:
    app: result-deployment
  ports:
  - port: 5001
    targetPort: 80
    nodePort: 31001